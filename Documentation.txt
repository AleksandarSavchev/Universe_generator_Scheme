		"Симулатор на вселената"

  За изпълнението на задачата съм дефинирал следните функции и променливи:
 zero - списък от двойки (брой и име на дадена частица), където общият брой
на частиците е 0.
 add-to name x l - "name" е името на частицата чийто брой ще се увеличи с "x"
в скисъка "l".
 default - също като zero само че броят на Хигс бозоните е 1.
 print l - изписва на екрана съдържанието на "l", като игнорира частици с
брой равен на 0.
 image-print l - визуализира частиците намиращи се в "l".
 get-num name l - връща броя на частицата с име "name" в списъка "l".
 combine l1 l2 - връща списък в който броят на различните частици от "l1" и
"l2" е сумиран.
 make-custom-system l - форматира двойките от списъка "l" да са в същата наредба
като тези от "zero" и "default", също така ако има еднаква частица в две или
повече двойки в "l" сумира броя и.
 same? l1 l2 - връща true ако броят на еднаквите частици е равен в "l1" и "l2"
и false в противен случай. "l1" и "l2" трябва да спазват еднаква наредба.
 stable? l - връща true ако броят на всички частици, които могат да се разпадат,
е равен на 0 и false в противен случай.
 image string - връща картинката на дадена частица с име "string".
 change l - в даден списък "l" заменя имената на частиците с техните картинки.
 X-colapse - връща списъка "zero" ако даден Хигс бозон не се е разпаднал в 
дадения такт или списък с елементите на които се е разпадна в противен случай.
 W-colapse - също като X-colapse, но за W бозон.
 Z-colapse - също като X-colapse, но за Z бозон.
 Top-colapse - също като X-colapse, но за топ кварк.
 Topanti-colapse - също като X-colapse, но за топ антикварк.
 step l - частиците от "l" преминават към слеващия такт (някои се разпадат, други
не се променят).
 stream l - създава поток от всички тактове на дадените частици в "l" до достигане
на стабилно състояние (състояние в което няма частици които да могат да се разлагат).
 read stream - изписва на екрана всеки такт в "stream", който има промяна от предходиня,
като също е запазена точната номерация.
 image-read stream - също като read stream, но визуализира частиците чрез техни картини.

  Основни функции:
 simulate . ls - симулира системата като ако не бъде подаден аргумент симулацията почва
от 1 хигс бозон. При подаване на аргумент/и симулацията почва от тях.
 Примерни тестве:
(simulate)
(simulate '((1 . "Хигс бозон") (1 . "W бозон") (1 . "Z бозон") (1 . "топ кварк") (1 . "топ антикварк")))
(simulate '((10 . "Хигс бозон")) '((10 . "W бозон")) '((10 . "Z бозон")) '((10 . "топ кварк")) '((10 . "топ антикварк")))
 image-simulate . ls - също като simulate . ls, но визуализира частиците чрез картинки.
 Примерни тестове:
(image-simulate)
(image-simulate '((10 . "Хигс бозон")))
(image-simulate '((1 . "Хигс бозон")) '((1 . "W бозон")) '((1 . "топ кварк")) '((10 . "електрон")))
(image-simulate '((1 . "Хигс бозон")  (1 . "Хигс бозон") (1 . "Z бозон") (1 . "Хигс бозон") (1 . "Хигс бозон")))